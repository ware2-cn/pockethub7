'use strict';(function(f){"object"==typeof exports&&"object"==typeof module?f(require("../../lib/codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],f):f(CodeMirror)})(function(f){function g(a){for(var b={},c=0;c<a.length;c++)b[a[c]]=!0;return b}function h(a,b,c){a.sol()&&(b.indented=a.indentation());if(a.eatSpace())return null;var d=a.peek();if("/"==d){if(a.match("//"))return a.skipToEnd(),"comment";if(a.match("/*"))return b.tokenize.push(k),k(a,b);if(a.match(l))return"string-2"}if(-1<
"+-/*%=|&<>#".indexOf(d))return a.next(),"operator";if(-1<";,.(){}[]".indexOf(d))return a.next(),a.match(".."),"punctuation";if('"'==d||"'"==d)return a.next(),c=m(d),b.tokenize.push(c),c(a,b);if(a.match(n))return"number";if(a.match(p))return"property";if(a.match(q))return a=a.current(),r.hasOwnProperty(a)?(t.hasOwnProperty(a)&&(b.prev="define"),"keyword"):u.hasOwnProperty(a)?"variable-2":v.hasOwnProperty(a)?"atom":"define"==c?"def":"variable";a.next();return null}function w(){var a=0;return function(b,
c,d){d=h(b,c,d);if("punctuation"==d)if("("==b.current())++a;else if(")"==b.current()){if(0==a)return b.backUp(1),c.tokenize.pop(),c.tokenize[c.tokenize.length-1](b,c);--a}return d}}function m(a){return function(b,c){for(var d,e=!1;d=b.next();)if(e){if("("==d)return c.tokenize.push(w()),"string";e=!1}else if(d==a)break;else e="\\"==d;c.tokenize.pop();return"string"}}function k(a,b){a.match(/^(?:[^*]|\*(?!\/))*/);a.match("*/")&&b.tokenize.pop();return"comment"}function x(a,b,c){this.prev=a;this.align=
b;this.indented=c}function y(a,b){b=b.match(/^\s*($|\/[\/\*])/,!1)?null:b.column()+1;a.context=new x(a.context,b,a.indented)}function z(a){a.context&&(a.indented=a.context.indented,a.context=a.context.prev)}var r=g("var let class deinit enum extension func import init protocol static struct subscript typealias as dynamicType is new super self Self Type __COLUMN__ __FILE__ __FUNCTION__ __LINE__ break case continue default do else fallthrough if in for return switch where while associativity didSet get infix inout left mutating none nonmutating operator override postfix precedence prefix right set unowned weak willSet".split(" ")),
t=g("var let class enum extension func import protocol struct typealias dynamicType for".split(" ")),v=g("Infinity NaN undefined null true false on off yes no nil null this super".split(" ")),u=g("String bool int string double Double Int Float float public private extension".split(" ")),n=/^-?(?:(?:[\d_]+\.[_\d]*|\.[_\d]+|0o[0-7_\.]+|0b[01_\.]+)(?:e-?[\d_]+)?|0x[\d_a-f\.]+(?:p-?[\d_]+)?)/i,q=/^[_A-Za-z$][_A-Za-z$0-9]*/,p=/^[@\.][_A-Za-z$][_A-Za-z$0-9]*/,l=/^\/(?!\s)(?:\/\/)?(?:\\.|[^\/])+\//;f.defineMode("swift",
function(a){return{startState:function(){return{prev:null,context:null,indented:0,tokenize:[]}},token:function(a,c){var b=c.prev;c.prev=null;var e=(c.tokenize[c.tokenize.length-1]||h)(a,c,b);e&&"comment"!=e?c.prev||(c.prev=e):c.prev=b;"punctuation"==e&&(b=/[\(\[\{]|([\]\)\}])/.exec(a.current()))&&(b[1]?z:y)(c,a);return e},indent:function(b,c){b=b.context;if(!b)return 0;c=/^[\]\}\)]/.test(c);return null!=b.align?b.align-(c?1:0):b.indented+(c?0:a.indentUnit)},electricInput:/^\s*[\)\}\]]$/,lineComment:"//",
blockCommentStart:"/*",blockCommentEnd:"*/"}});f.defineMIME("text/x-swift","swift")});
