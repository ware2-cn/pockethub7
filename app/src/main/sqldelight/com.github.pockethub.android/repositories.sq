CREATE TABLE repositories (
    id INTEGER PRIMARY KEY,
    repoId INTEGER,
    orgId INTEGER,
    name TEXT,
    ownerId INTEGER,
    private INTEGER as Boolean,
    fork INTEGER as Boolean,
    description TEXT,
    forks INTEGER as Int,
    watchers INTEGER as Int,
    language TEXT,
    hasIssues INTEGER as Boolean,
    mirrorUrl TEXT,
    permissions_admin INTEGER as Boolean,
    permissions_pull INTEGER as Boolean,
    permissions_push INTEGER as Boolean
);

selectUserRepositories:
SELECT repoId, repositories.name, users.id, users.login, users.name, users.avatarurl, repositories.private, repositories.fork, repositories.description, repositories.forks, repositories.watchers, repositories.language, repositories.hasIssues, repositories.mirrorUrl, repositories.permissions_admin, repositories.permissions_pull, repositories.permissions_push
FROM repositories
JOIN users
ON repositories.ownerId = users.id
WHERE repositories.orgId = ?;

clearUserRepositories:
DELETE FROM repositories WHERE orgId = ?;

clearRepositories:
DELETE FROM repositories;

insertRepo:
INSERT
INTO repositories(repoId, name, orgId, ownerId, private, fork, description, forks, watchers, language, hasIssues, mirrorUrl, permissions_admin, permissions_pull, permissions_push)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
